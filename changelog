
# Updates 08/09/2021

- Role verify implemented on ownership middleware to allow admins to access all resources.
- Added restriction role middleware to prevent users from accessing resources they are not allowed to (optional).
- User role now is selected from a model that can be extended, allowing for custom roles, the default role is user.
- User roles is now sent inside the JWT token, to verify it when necessary.
- Created standard for config data that must be inserted on every document (user, post, comment, etc) This config object will contain granular configurations for every data inserted on db.
- Created standard for role model.
- Fixed error on posts api ( `req.user` => `req.targetUser`), now `req.targetuser` is the user that is being requested in the url endpoint and `req.user` is the user that is logged in.
- Fixed missing imports on ownership file.

# Updates 07/09/2021

- Ownership Security implementation based on route and JWT comparison
- Fixed a bug in the backend where the user was not able to persist sessions
- Added mergeParams to the routes
- Added username and userID to the JWT payload on authentication
- Better error handling for the backend
- Target user serialization for getting user by any valid identifier (this costs db queries per request, standard for api must be decided)
- Lint rule added, must include semicolons
- Created contentRulesMiddleware for project content by the user privacy configuration
- Created the rule engine (projectionEngine, createFilter).
- TODO: Move the whole operation inside try/catch and perform db lookup first

# Updates 05/09/2021

- Routing posts API to /api/users/:userId/posts
- Added security schema to the API
- Updated post schema to include author
- Fixed bug in refresh token creation (wasn't working with dayjs objects)
- Documented the new API routing

# Updates 29/08/2021

- Implementation of JWT refresh session with refresh token
- Auth JWT method refraction

# Updates 25/08/2021

- Stellar SEP 0010 auth implementation (server side)

# Updates 24/08/2021

- Basic JWT authentication middleware
- Basic JWT token validation
- Auth endpoints
- Basic user management
- Some security statements declared
- new user models